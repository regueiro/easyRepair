package es.regueiro.easyrepair.ui.client;

import com.google.i18n.phonenumbers.NumberParseException;
import com.google.i18n.phonenumbers.PhoneNumberUtil;
import com.google.i18n.phonenumbers.Phonenumber;
import es.regueiro.easyrepair.model.client.Client;
import es.regueiro.easyrepair.model.client.Vehicle;
import es.regueiro.easyrepair.model.shared.Address;
import es.regueiro.easyrepair.model.shared.Email;
import es.regueiro.easyrepair.model.shared.Phone;
import es.regueiro.easyrepair.reports.ReportPrinter;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Collection;
import javax.swing.SwingWorker;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.util.HelpCtx;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//es.regueiro.easyrepair.ui.client//ClientDetailedView//EN",
autostore = false)
@TopComponent.Description(iconBase = "es/regueiro/easyrepair/ui/client/icons/client_detailed.png", preferredID = "ClientDetailedViewTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(position = 0, mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "es.regueiro.easyrepair.ui.client.ClientDetailedViewTopComponent")
@TopComponent.OpenActionRegistration(displayName = "CTL_ClientDetailedViewAction",
preferredID = "ClientDetailedViewTopComponent")
@Messages({
    "CTL_ClientDetailedViewAction=Vista detallada de clientes",
    "CTL_ClientDetailedViewTopComponent=Vista detallada de clientes",
    "HINT_ClientDetailedViewTopComponent=Esta es una ventana de la vista detallada de clientes"
})
public final class ClientDetailedViewTopComponent extends TopComponent implements LookupListener {

    private Lookup.Result<Client> result = null;
    private Client client;
    private PhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();

    public ClientDetailedViewTopComponent() {
        initComponents();
        setName(Bundle.CTL_ClientDetailedViewTopComponent());
        setToolTipText(Bundle.HINT_ClientDetailedViewTopComponent());
        this.setFocusable(true);


        setupAddressComboBox();
        setupEmailComboBox();
        setupPhoneComboBox();
        setupVehicleComboBox();


        extendedDataTabbedPane.setIconAt(0, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/client/icons/book.png")));
        extendedDataTabbedPane.setIconAt(1, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/client/icons/email.png")));
        extendedDataTabbedPane.setIconAt(2, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/client/icons/phone.png")));
        extendedDataTabbedPane.setIconAt(3, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/client/icons/car.png")));
        extendedDataTabbedPane.setIconAt(4, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/client/icons/document_notes.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        generalPanel = new javax.swing.JPanel();
        tittleLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        clientIdLabel = new javax.swing.JLabel();
        clientIdTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JLabel();
        surnameTextField = new javax.swing.JTextField();
        nifLabel = new javax.swing.JLabel();
        nifTextField = new javax.swing.JTextField();
        printButton = new javax.swing.JButton();
        extendedDataTabbedPane = new javax.swing.JTabbedPane();
        addressPanel = new javax.swing.JPanel();
        addressLabelLabel = new javax.swing.JLabel();
        addressStreetLabel = new javax.swing.JLabel();
        addressCityLabel = new javax.swing.JLabel();
        addressProvinceLabel = new javax.swing.JLabel();
        addressPostalCodeLabel = new javax.swing.JLabel();
        addressCountryLabel = new javax.swing.JLabel();
        addressLabelTextField = new javax.swing.JTextField();
        addressStreetTextField = new javax.swing.JTextField();
        addressCityTextField = new javax.swing.JTextField();
        addressProvinceTextField = new javax.swing.JTextField();
        addressPostalCodeTextField = new javax.swing.JTextField();
        addressCountryTextField = new javax.swing.JTextField();
        addressComboBox = new javax.swing.JComboBox();
        addressNotesLabel = new javax.swing.JLabel();
        addressNotesScrollPane = new javax.swing.JScrollPane();
        addressNotesTextArea = new javax.swing.JTextArea();
        emailPanel = new javax.swing.JPanel();
        emailLabelLabel = new javax.swing.JLabel();
        emailAddressLabel = new javax.swing.JLabel();
        emailAddressTextField = new javax.swing.JTextField();
        emailLabelTextField = new javax.swing.JTextField();
        emailComboBox = new javax.swing.JComboBox();
        emailNotesLabel = new javax.swing.JLabel();
        emailNotesScrollPane = new javax.swing.JScrollPane();
        emailNotesTextArea = new javax.swing.JTextArea();
        phonePanel = new javax.swing.JPanel();
        phoneLabelLabel = new javax.swing.JLabel();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneLabelTextField = new javax.swing.JTextField();
        phoneNumberTextField = new javax.swing.JTextField();
        phoneComboBox = new javax.swing.JComboBox();
        phoneNotesLabel = new javax.swing.JLabel();
        phoneNotesScrollPane = new javax.swing.JScrollPane();
        phoneNotesTextArea = new javax.swing.JTextArea();
        vehiclesPanel = new javax.swing.JPanel();
        vehicleInsuranceNumberLabel = new javax.swing.JLabel();
        vehicleRegistrationTextField = new javax.swing.JTextField();
        vehicleYearLabel = new javax.swing.JLabel();
        vehicleInsuranceNumberTextField = new javax.swing.JTextField();
        vehicleFuelLabel = new javax.swing.JLabel();
        vehicleFuelTextField = new javax.swing.JTextField();
        vehicleVinLabel = new javax.swing.JLabel();
        vehicleRegistrationLabel = new javax.swing.JLabel();
        vehicleModelLabel = new javax.swing.JLabel();
        vehicleTypeLabel = new javax.swing.JLabel();
        vehicleMakeTextField = new javax.swing.JTextField();
        vehicleColourTextField = new javax.swing.JTextField();
        vehicleTypeTextField = new javax.swing.JTextField();
        vehicleIdLabel = new javax.swing.JLabel();
        vehicleMakeLabel = new javax.swing.JLabel();
        vehicleColourLabel = new javax.swing.JLabel();
        vehicleIdTextField = new javax.swing.JTextField();
        vehicleVinTextField = new javax.swing.JTextField();
        vehicleModelTextField = new javax.swing.JTextField();
        vehicleYearTextField = new javax.swing.JTextField();
        vehicleInsuranceCompanyLabel = new javax.swing.JLabel();
        vehicleInsuranceCompanyTextField = new javax.swing.JTextField();
        vehicleNotesLabel = new javax.swing.JLabel();
        vehicleNotesScrollPane = new javax.swing.JScrollPane();
        vehicleNotesTextArea = new javax.swing.JTextArea();
        vehicleComboBox = new javax.swing.JComboBox();
        notesPanel = new javax.swing.JPanel();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        mainScrollPane.setBorder(null);

        mainPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        mainPanel.setLayout(new java.awt.GridBagLayout());

        generalPanel.setMinimumSize(new java.awt.Dimension(100, 192));
        generalPanel.setLayout(new java.awt.GridBagLayout());

        tittleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tittleLabel.setForeground(new java.awt.Color(82, 107, 134));
        org.openide.awt.Mnemonics.setLocalizedText(tittleLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.tittleLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        generalPanel.add(tittleLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(idLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.idLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(idLabel, gridBagConstraints);

        idTextField.setEditable(false);
        idTextField.setBackground(new java.awt.Color(232, 231, 231));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(idTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(clientIdLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.clientIdLabel.text")); // NOI18N
        clientIdLabel.setPreferredSize(new java.awt.Dimension(80, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(clientIdLabel, gridBagConstraints);

        clientIdTextField.setEditable(false);
        clientIdTextField.setBackground(new java.awt.Color(232, 231, 231));
        clientIdTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        clientIdTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(clientIdTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.nameLabel.text")); // NOI18N
        nameLabel.setPreferredSize(new java.awt.Dimension(80, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nameLabel, gridBagConstraints);

        nameTextField.setEditable(false);
        nameTextField.setBackground(new java.awt.Color(232, 231, 231));
        nameTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        nameTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nameTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(surnameLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.surnameLabel.text")); // NOI18N
        surnameLabel.setPreferredSize(new java.awt.Dimension(80, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(surnameLabel, gridBagConstraints);

        surnameTextField.setEditable(false);
        surnameTextField.setBackground(new java.awt.Color(232, 231, 231));
        surnameTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        surnameTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(surnameTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(nifLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.nifLabel.text")); // NOI18N
        nifLabel.setPreferredSize(new java.awt.Dimension(80, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nifLabel, gridBagConstraints);

        nifTextField.setEditable(false);
        nifTextField.setBackground(new java.awt.Color(232, 231, 231));
        nifTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        nifTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nifTextField, gridBagConstraints);

        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/client/icons/printer.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(printButton, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.printButton.text")); // NOI18N
        printButton.setEnabled(false);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(printButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(generalPanel, gridBagConstraints);

        extendedDataTabbedPane.setMinimumSize(new java.awt.Dimension(100, 100));

        addressPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(addressLabelLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressLabelLabel.text")); // NOI18N
        addressLabelLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressLabelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressStreetLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressStreetLabel.text")); // NOI18N
        addressStreetLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressStreetLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressCityLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressCityLabel.text")); // NOI18N
        addressCityLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressCityLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressProvinceLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressProvinceLabel.text")); // NOI18N
        addressProvinceLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressProvinceLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressPostalCodeLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressPostalCodeLabel.text")); // NOI18N
        addressPostalCodeLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressPostalCodeLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressCountryLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressCountryLabel.text")); // NOI18N
        addressCountryLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressCountryLabel, gridBagConstraints);

        addressLabelTextField.setEditable(false);
        addressLabelTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressLabelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressLabelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressLabelTextField, gridBagConstraints);

        addressStreetTextField.setEditable(false);
        addressStreetTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressStreetTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressStreetTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressStreetTextField, gridBagConstraints);

        addressCityTextField.setEditable(false);
        addressCityTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressCityTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressCityTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressCityTextField, gridBagConstraints);

        addressProvinceTextField.setEditable(false);
        addressProvinceTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressProvinceTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressProvinceTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressProvinceTextField, gridBagConstraints);

        addressPostalCodeTextField.setEditable(false);
        addressPostalCodeTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressPostalCodeTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressPostalCodeTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressPostalCodeTextField, gridBagConstraints);

        addressCountryTextField.setEditable(false);
        addressCountryTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressCountryTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressCountryTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressCountryTextField, gridBagConstraints);

        addressComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        addressComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressComboBox, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressNotesLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressNotesLabel.text")); // NOI18N
        addressNotesLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressNotesLabel, gridBagConstraints);

        addressNotesTextArea.setEditable(false);
        addressNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        addressNotesTextArea.setColumns(20);
        addressNotesTextArea.setRows(3);
        addressNotesScrollPane.setViewportView(addressNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressPanel.add(addressNotesScrollPane, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.addressPanel.TabConstraints.tabTitle"), addressPanel); // NOI18N

        emailPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(emailLabelLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.emailLabelLabel.text")); // NOI18N
        emailLabelLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailLabelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(emailAddressLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.emailAddressLabel.text")); // NOI18N
        emailAddressLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailAddressLabel, gridBagConstraints);

        emailAddressTextField.setEditable(false);
        emailAddressTextField.setBackground(new java.awt.Color(232, 231, 231));
        emailAddressTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        emailAddressTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailAddressTextField, gridBagConstraints);

        emailLabelTextField.setEditable(false);
        emailLabelTextField.setBackground(new java.awt.Color(232, 231, 231));
        emailLabelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        emailLabelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailLabelTextField, gridBagConstraints);

        emailComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        emailComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailComboBox, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(emailNotesLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.emailNotesLabel.text")); // NOI18N
        emailNotesLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailNotesLabel, gridBagConstraints);

        emailNotesTextArea.setEditable(false);
        emailNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        emailNotesTextArea.setColumns(20);
        emailNotesTextArea.setRows(5);
        emailNotesScrollPane.setViewportView(emailNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailPanel.add(emailNotesScrollPane, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.emailPanel.TabConstraints.tabTitle"), emailPanel); // NOI18N

        phonePanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(phoneLabelLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.phoneLabelLabel.text")); // NOI18N
        phoneLabelLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneLabelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(phoneNumberLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.phoneNumberLabel.text")); // NOI18N
        phoneNumberLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneNumberLabel, gridBagConstraints);

        phoneLabelTextField.setEditable(false);
        phoneLabelTextField.setBackground(new java.awt.Color(232, 231, 231));
        phoneLabelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        phoneLabelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneLabelTextField, gridBagConstraints);

        phoneNumberTextField.setEditable(false);
        phoneNumberTextField.setBackground(new java.awt.Color(232, 231, 231));
        phoneNumberTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        phoneNumberTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneNumberTextField, gridBagConstraints);

        phoneComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        phoneComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneComboBox, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(phoneNotesLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.phoneNotesLabel.text")); // NOI18N
        phoneNotesLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneNotesLabel, gridBagConstraints);

        phoneNotesTextArea.setEditable(false);
        phoneNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        phoneNotesTextArea.setColumns(20);
        phoneNotesTextArea.setRows(5);
        phoneNotesScrollPane.setViewportView(phoneNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phonePanel.add(phoneNotesScrollPane, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.phonePanel.TabConstraints.tabTitle"), phonePanel); // NOI18N

        vehiclesPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(vehicleInsuranceNumberLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleInsuranceNumberLabel.text")); // NOI18N
        vehicleInsuranceNumberLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleInsuranceNumberLabel, gridBagConstraints);

        vehicleRegistrationTextField.setEditable(false);
        vehicleRegistrationTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleRegistrationTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleRegistrationTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleRegistrationTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleYearLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleYearLabel.text")); // NOI18N
        vehicleYearLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleYearLabel, gridBagConstraints);

        vehicleInsuranceNumberTextField.setEditable(false);
        vehicleInsuranceNumberTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleInsuranceNumberTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleInsuranceNumberTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleInsuranceNumberTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleFuelLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleFuelLabel.text")); // NOI18N
        vehicleFuelLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleFuelLabel, gridBagConstraints);

        vehicleFuelTextField.setEditable(false);
        vehicleFuelTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleFuelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleFuelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleFuelTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleVinLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleVinLabel.text")); // NOI18N
        vehicleVinLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleVinLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleRegistrationLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleRegistrationLabel.text")); // NOI18N
        vehicleRegistrationLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleRegistrationLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleModelLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleModelLabel.text")); // NOI18N
        vehicleModelLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleModelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleTypeLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleTypeLabel.text")); // NOI18N
        vehicleTypeLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleTypeLabel, gridBagConstraints);

        vehicleMakeTextField.setEditable(false);
        vehicleMakeTextField.setBackground(new java.awt.Color(232, 231, 231));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleMakeTextField, gridBagConstraints);

        vehicleColourTextField.setEditable(false);
        vehicleColourTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleColourTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleColourTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleColourTextField, gridBagConstraints);

        vehicleTypeTextField.setEditable(false);
        vehicleTypeTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleTypeTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleTypeTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleTypeTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleIdLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleIdLabel.text")); // NOI18N
        vehicleIdLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleIdLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleMakeLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleMakeLabel.text")); // NOI18N
        vehicleMakeLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleMakeLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleColourLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleColourLabel.text")); // NOI18N
        vehicleColourLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleColourLabel, gridBagConstraints);

        vehicleIdTextField.setEditable(false);
        vehicleIdTextField.setBackground(new java.awt.Color(232, 231, 231));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleIdTextField, gridBagConstraints);

        vehicleVinTextField.setEditable(false);
        vehicleVinTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleVinTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleVinTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleVinTextField, gridBagConstraints);

        vehicleModelTextField.setEditable(false);
        vehicleModelTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleModelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleModelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleModelTextField, gridBagConstraints);

        vehicleYearTextField.setEditable(false);
        vehicleYearTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleYearTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleYearTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleYearTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleInsuranceCompanyLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleInsuranceCompanyLabel.text")); // NOI18N
        vehicleInsuranceCompanyLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleInsuranceCompanyLabel, gridBagConstraints);

        vehicleInsuranceCompanyTextField.setEditable(false);
        vehicleInsuranceCompanyTextField.setBackground(new java.awt.Color(232, 231, 231));
        vehicleInsuranceCompanyTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        vehicleInsuranceCompanyTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleInsuranceCompanyTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(vehicleNotesLabel, org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehicleNotesLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleNotesLabel, gridBagConstraints);

        vehicleNotesTextArea.setEditable(false);
        vehicleNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        vehicleNotesTextArea.setColumns(20);
        vehicleNotesTextArea.setRows(3);
        vehicleNotesScrollPane.setViewportView(vehicleNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleNotesScrollPane, gridBagConstraints);

        vehicleComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        vehicleComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        vehiclesPanel.add(vehicleComboBox, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.vehiclesPanel.TabConstraints.tabTitle"), vehiclesPanel); // NOI18N

        notesPanel.setLayout(new java.awt.GridBagLayout());

        notesTextArea.setEditable(false);
        notesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        notesTextArea.setColumns(20);
        notesTextArea.setRows(5);
        notesScrollPane.setViewportView(notesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        notesPanel.add(notesScrollPane, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ClientDetailedViewTopComponent.class, "ClientDetailedViewTopComponent.notesPanel.TabConstraints.tabTitle"), notesPanel); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(extendedDataTabbedPane, gridBagConstraints);

        mainScrollPane.setViewportView(mainPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(mainScrollPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        final SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected void done() {
            }

            @Override
            protected Void doInBackground() {
                ReportPrinter printer = new ReportPrinter();
                printer.printClient(client);
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_printButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressCityLabel;
    private javax.swing.JTextField addressCityTextField;
    private javax.swing.JComboBox addressComboBox;
    private javax.swing.JLabel addressCountryLabel;
    private javax.swing.JTextField addressCountryTextField;
    private javax.swing.JLabel addressLabelLabel;
    private javax.swing.JTextField addressLabelTextField;
    private javax.swing.JLabel addressNotesLabel;
    private javax.swing.JScrollPane addressNotesScrollPane;
    private javax.swing.JTextArea addressNotesTextArea;
    private javax.swing.JPanel addressPanel;
    private javax.swing.JLabel addressPostalCodeLabel;
    private javax.swing.JTextField addressPostalCodeTextField;
    private javax.swing.JLabel addressProvinceLabel;
    private javax.swing.JTextField addressProvinceTextField;
    private javax.swing.JLabel addressStreetLabel;
    private javax.swing.JTextField addressStreetTextField;
    private javax.swing.JLabel clientIdLabel;
    private javax.swing.JTextField clientIdTextField;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JTextField emailAddressTextField;
    private javax.swing.JComboBox emailComboBox;
    private javax.swing.JLabel emailLabelLabel;
    private javax.swing.JTextField emailLabelTextField;
    private javax.swing.JLabel emailNotesLabel;
    private javax.swing.JScrollPane emailNotesScrollPane;
    private javax.swing.JTextArea emailNotesTextArea;
    private javax.swing.JPanel emailPanel;
    private javax.swing.JTabbedPane extendedDataTabbedPane;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel nifLabel;
    private javax.swing.JTextField nifTextField;
    private javax.swing.JPanel notesPanel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTextArea;
    private javax.swing.JComboBox phoneComboBox;
    private javax.swing.JLabel phoneLabelLabel;
    private javax.swing.JTextField phoneLabelTextField;
    private javax.swing.JLabel phoneNotesLabel;
    private javax.swing.JScrollPane phoneNotesScrollPane;
    private javax.swing.JTextArea phoneNotesTextArea;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JPanel phonePanel;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTextField surnameTextField;
    private javax.swing.JLabel tittleLabel;
    private javax.swing.JLabel vehicleColourLabel;
    private javax.swing.JTextField vehicleColourTextField;
    private javax.swing.JComboBox vehicleComboBox;
    private javax.swing.JLabel vehicleFuelLabel;
    private javax.swing.JTextField vehicleFuelTextField;
    private javax.swing.JLabel vehicleIdLabel;
    private javax.swing.JTextField vehicleIdTextField;
    private javax.swing.JLabel vehicleInsuranceCompanyLabel;
    private javax.swing.JTextField vehicleInsuranceCompanyTextField;
    private javax.swing.JLabel vehicleInsuranceNumberLabel;
    private javax.swing.JTextField vehicleInsuranceNumberTextField;
    private javax.swing.JLabel vehicleMakeLabel;
    private javax.swing.JTextField vehicleMakeTextField;
    private javax.swing.JLabel vehicleModelLabel;
    private javax.swing.JTextField vehicleModelTextField;
    private javax.swing.JLabel vehicleNotesLabel;
    private javax.swing.JScrollPane vehicleNotesScrollPane;
    private javax.swing.JTextArea vehicleNotesTextArea;
    private javax.swing.JLabel vehicleRegistrationLabel;
    private javax.swing.JTextField vehicleRegistrationTextField;
    private javax.swing.JLabel vehicleTypeLabel;
    private javax.swing.JTextField vehicleTypeTextField;
    private javax.swing.JLabel vehicleVinLabel;
    private javax.swing.JTextField vehicleVinTextField;
    private javax.swing.JLabel vehicleYearLabel;
    private javax.swing.JTextField vehicleYearTextField;
    private javax.swing.JPanel vehiclesPanel;
    // End of variables declaration//GEN-END:variables

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public HelpCtx getHelpCtx() {
        //HelpCtx ctx = new HelpCtx("sdk.scene_explorer");
        //this call is for single components:
        return new HelpCtx("es.regueiro.easyrepair.ui.client.detailed");
    }

    @Override
    public void componentOpened() {
        result = ClientLookup.getDefault().lookupResult(Client.class);
        result.addLookupListener(this);
        fillData();
    }

    @Override
    public void componentClosed() {
        result.removeLookupListener(this);
        result = null;

    }

    @Override
    public void resultChanged(LookupEvent event) {
        fillData();
    }

    private void fillData() {
        Collection<? extends Client> clientCol = result.allInstances();
        if (!clientCol.isEmpty()) {
            Client tempClient = clientCol.iterator().next();
            if (client != tempClient) {
                client = tempClient;
                clearGeneral();
                clearNotes();

                idTextField.setText(client.getId().toString());
                clientIdTextField.setText(client.getClientId());
                nameTextField.setText(client.getName());
                surnameTextField.setText(client.getSurname());
                if (client.getNif() != null) {
                    nifTextField.setText(client.getNif().getNumber());
                }
                fillAddresses();
                fillEmails();
                fillPhones();
                fillVehicles();
                if (client.getNotes() != null) {
                    notesTextArea.setText(client.getNotes());
                    extendedDataTabbedPane.setEnabledAt(3, true);
                    if (!extendedDataTabbedPane.isEnabledAt(0)
                            && !extendedDataTabbedPane.isEnabledAt(1)
                            && !extendedDataTabbedPane.isEnabledAt(2)) {
                        extendedDataTabbedPane.setSelectedIndex(3);
                    }
                }
                printButton.setEnabled(true);
            }
        } else {
//            clear();
        }
    }

    private void fillAddresses() {
        clearAddresses();
        if (client.getAddress() != null && !client.getAddress().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(0, true);
            for (Address a : client.getAddress()) {
                AddressBox adddress = new AddressBox(a.getLabel(), a);
                addressComboBox.addItem(adddress);
            }
            addressComboBox.setEnabled(true);
            extendedDataTabbedPane.setSelectedIndex(0);
        }
    }

    private void fillPhones() {
        clearPhones();
        if (client.getPhone() != null && !client.getPhone().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(2, true);
            for (Phone p : client.getPhone()) {
                PhoneBox phone = new PhoneBox(p.getLabel(), p);
                phoneComboBox.addItem(phone);
            }
            phoneComboBox.setEnabled(true);
            if (!extendedDataTabbedPane.isEnabledAt(0)
                    && !extendedDataTabbedPane.isEnabledAt(1)) {
                extendedDataTabbedPane.setSelectedIndex(2);
            }
        }
    }

    private void fillEmails() {
        clearEmails();
        if (client.getEmail() != null && !client.getEmail().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(1, true);
            for (Email e : client.getEmail()) {
                EmailBox email = new EmailBox(e.getLabel(), e);
                emailComboBox.addItem(email);
            }
            emailComboBox.setEnabled(true);
            if (!extendedDataTabbedPane.isEnabledAt(0)) {
                extendedDataTabbedPane.setSelectedIndex(1);
            }
        }
    }

    private void fillVehicles() {
        clearVehicles();
        if (client.getVehicles() != null && !client.getVehicles().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(3, true);
            for (Vehicle v : client.getVehicles()) {
                VehicleBox vehicle = new VehicleBox(v.getRegistration(), v);
                vehicleComboBox.addItem(vehicle);
            }
            vehicleComboBox.setEnabled(true);
            if (!extendedDataTabbedPane.isEnabledAt(2)) {
                extendedDataTabbedPane.setSelectedIndex(3);
            }
        }
    }

    private void clear() {
        client = null;
        clearGeneral();
        clearAddresses();
        clearEmails();
        clearPhones();
        clearNotes();
        clearVehicles();
    }

    private void clearGeneral() {
        idTextField.setText("");
        clientIdTextField.setText("");
        nameTextField.setText("");
        surnameTextField.setText("");
        nifTextField.setText("");

        extendedDataTabbedPane.setEnabledAt(0, false);
        extendedDataTabbedPane.setEnabledAt(1, false);
        extendedDataTabbedPane.setEnabledAt(2, false);
        extendedDataTabbedPane.setEnabledAt(3, false);
        extendedDataTabbedPane.setEnabledAt(4, false);
        
        printButton.setEnabled(false);
    }

    private void clearEmails() {
        extendedDataTabbedPane.setEnabledAt(1, false);
        emailComboBox.setEnabled(false);
        emailComboBox.removeAllItems();
        emailAddressTextField.setText("");
        emailLabelTextField.setText("");
        emailNotesTextArea.setText("");
    }

    private void clearPhones() {
        extendedDataTabbedPane.setEnabledAt(2, false);
        phoneComboBox.setEnabled(false);
        phoneComboBox.removeAllItems();
        phoneNumberTextField.setText("");
        phoneLabelTextField.setText("");
        phoneNotesTextArea.setText("");
    }

    private void clearNotes() {
        extendedDataTabbedPane.setEnabledAt(4, false);
        notesTextArea.setText("");
    }

    private void clearAddresses() {
        extendedDataTabbedPane.setEnabledAt(0, false);
        addressComboBox.setEnabled(false);
        addressComboBox.removeAllItems();
        addressCityTextField.setText("");
        addressCountryTextField.setText("");
        addressLabelTextField.setText("");
        addressPostalCodeTextField.setText("");
        addressProvinceTextField.setText("");
        addressStreetTextField.setText("");
        addressNotesTextArea.setText("");
    }

    private void clearVehicles() {
        extendedDataTabbedPane.setEnabledAt(3, false);
        vehicleComboBox.setEnabled(false);
        vehicleComboBox.removeAllItems();
        vehicleColourTextField.setText("");
        vehicleFuelTextField.setText("");
        vehicleIdTextField.setText("");
        vehicleInsuranceCompanyTextField.setText("");
        vehicleInsuranceNumberTextField.setText("");
        vehicleMakeTextField.setText("");
        vehicleModelTextField.setText("");
        vehicleNotesTextArea.setText("");
        vehicleRegistrationTextField.setText("");
        vehicleTypeTextField.setText("");
        vehicleVinTextField.setText("");
        vehicleYearTextField.setText("");
    }

    private void setupEmailComboBox() {
        emailComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    EmailBox email = (EmailBox) e.getItem();

                    if (email != null && email.email != null) {
                        emailLabelTextField.setText(email.email.getLabel());
                        emailAddressTextField.setText(email.email.getAddress());
                        emailNotesTextArea.setText(email.email.getNotes());
                    }
                }
            }
        });
    }

    private void setupAddressComboBox() {
        addressComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    AddressBox address = (AddressBox) e.getItem();

                    if (address != null && address.address != null) {
                        addressStreetTextField.setText(address.address.getStreet());
                        addressProvinceTextField.setText(address.address.getProvince());
                        addressPostalCodeTextField.setText(address.address.getPostalCode());
                        addressCityTextField.setText(address.address.getCity());
                        addressCountryTextField.setText(address.address.getCountry());
                        addressLabelTextField.setText(address.address.getLabel());
                        addressNotesTextArea.setText(address.address.getNotes());
                    }
                }
            }
        });
    }

    private void setupPhoneComboBox() {
        phoneComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    PhoneBox phone = (PhoneBox) e.getItem();

                    if (phone != null && phone.phone != null) {
                        phoneLabelTextField.setText(phone.phone.getLabel());
                        String formattedPhone;
                        Phonenumber.PhoneNumber numberProto;
                        try {
                            numberProto = phoneUtil.parse(phone.phone.getNumber(), "ES");
                        } catch (NumberParseException ex) {
                            throw new IllegalArgumentException("This shouldn't happen " + ex.getMessage());
                        }
                        if (numberProto.getCountryCode() == 34) {
                            phoneNumberTextField.setText(phoneUtil.format(numberProto, PhoneNumberUtil.PhoneNumberFormat.NATIONAL));
                        } else {
                            phoneNumberTextField.setText(phoneUtil.format(numberProto, PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL));
                        }
                        phoneNotesTextArea.setText(phone.phone.getNotes());
                    }
                }
            }
        });
    }

    private void setupVehicleComboBox() {
        vehicleComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    VehicleBox vehicle = (VehicleBox) e.getItem();

                    if (vehicle != null && vehicle.vehicle != null) {
                        emailLabelTextField.setText(vehicle.vehicle.getRegistration());
                        vehicleColourTextField.setText(vehicle.vehicle.getColour());
                        vehicleFuelTextField.setText(vehicle.vehicle.getFuel());
                        vehicleIdTextField.setText(vehicle.vehicle.getId().toString());
                        if (vehicle.vehicle.getInsuranceCompany() != null) {
                            vehicleInsuranceCompanyTextField.setText(vehicle.vehicle.getInsuranceCompany().getName());
                        }
                        vehicleInsuranceNumberTextField.setText(vehicle.vehicle.getInsuranceNumber());
                        vehicleMakeTextField.setText(vehicle.vehicle.getMake());
                        vehicleModelTextField.setText(vehicle.vehicle.getModel());
                        vehicleNotesTextArea.setText(vehicle.vehicle.getNotes());
                        vehicleRegistrationTextField.setText(vehicle.vehicle.getRegistration());
                        vehicleTypeTextField.setText(vehicle.vehicle.getType());
                        vehicleVinTextField.setText(vehicle.vehicle.getVin());
                        vehicleYearTextField.setText(vehicle.vehicle.getYear());
                    }
                }
            }
        });
    }

    private class AddressBox {

        public Address address;
        public String label;

        public AddressBox(String label, Address address) {
            this.label = label;
            this.address = address;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }

    private class PhoneBox {

        public Phone phone;
        public String label;

        public PhoneBox(String label, Phone phone) {
            this.label = label;
            this.phone = phone;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }

    private class EmailBox {

        public Email email;
        public String label;

        public EmailBox(String label, Email email) {
            this.label = label;
            this.email = email;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }

    private class VehicleBox {

        public Vehicle vehicle;
        public String label;

        public VehicleBox(String label, Vehicle vehicle) {
            this.label = label;
            this.vehicle = vehicle;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }
}
