/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package es.regueiro.easyrepair.shared.options;

import org.openide.util.NbPreferences;

final class CurrencyPanel extends javax.swing.JPanel {

    private final CurrencyOptionsPanelController controller;

    CurrencyPanel(CurrencyOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        
        String[] cbStrings = {java.util.ResourceBundle.getBundle("es/regueiro/easyrepair/shared/options/Bundle").getString("FRONT"),
            java.util.ResourceBundle.getBundle("es/regueiro/easyrepair/shared/options/Bundle").getString("BACK")};


        for (String s : cbStrings) {
            positionComboBox.addItem(s);
        }
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel = new javax.swing.JPanel();
        positionComboBox = new javax.swing.JComboBox();
        positionLabel = new javax.swing.JLabel();
        currencyTextField = new javax.swing.JTextField();
        currencyLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel.add(positionComboBox, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(positionLabel, org.openide.util.NbBundle.getMessage(CurrencyPanel.class, "CurrencyPanel.positionLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel.add(positionLabel, gridBagConstraints);

        currencyTextField.setText(org.openide.util.NbBundle.getMessage(CurrencyPanel.class, "CurrencyPanel.currencyTextField.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel.add(currencyTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(currencyLabel, org.openide.util.NbBundle.getMessage(CurrencyPanel.class, "CurrencyPanel.currencyLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel.add(currencyLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(jPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(CurrencyPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(CurrencyPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        currencyTextField.setText(NbPreferences.root().get("currency", " â‚¬"));
        if (NbPreferences.root().getBoolean("inFront", false)) {
            positionComboBox.setSelectedIndex(0);
        } else {
            positionComboBox.setSelectedIndex(1);
        }
        
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(CurrencyPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(CurrencyPanel.class)..getBoolean("someFlag", false));("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        NbPreferences.root().put("currency", currencyTextField.getText());
        if (positionComboBox.getSelectedIndex() == 0) {
            NbPreferences.root().putBoolean("inFront", true);
        } else {
            NbPreferences.root().putBoolean("inFront", false);
        }
        
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currencyLabel;
    private javax.swing.JTextField currencyTextField;
    private javax.swing.JPanel jPanel;
    private javax.swing.JComboBox positionComboBox;
    private javax.swing.JLabel positionLabel;
    // End of variables declaration//GEN-END:variables
}
