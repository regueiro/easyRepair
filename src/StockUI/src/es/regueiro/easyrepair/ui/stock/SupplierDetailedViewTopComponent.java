package es.regueiro.easyrepair.ui.stock;

import com.google.i18n.phonenumbers.NumberParseException;
import com.google.i18n.phonenumbers.PhoneNumberUtil;
import com.google.i18n.phonenumbers.Phonenumber;
import es.regueiro.easyrepair.model.stock.Supplier;
import es.regueiro.easyrepair.model.shared.Address;
import es.regueiro.easyrepair.model.shared.Email;
import es.regueiro.easyrepair.model.shared.Phone;
import es.regueiro.easyrepair.reports.ReportPrinter;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Collection;
import javax.swing.SwingWorker;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.util.HelpCtx;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//es.regueiro.easyrepair.ui.stock//SupplierDetailedView//EN",
autostore = false)
@TopComponent.Description(iconBase = "es/regueiro/easyrepair/ui/stock/icons/supplier_detailed.png", preferredID = "SupplierDetailedViewTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(position = 10, mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "es.regueiro.easyrepair.ui.stock.SupplierDetailedViewTopComponent")
@TopComponent.OpenActionRegistration(displayName = "#CTL_SupplierDetailedViewAction",
preferredID = "SupplierDetailedViewTopComponent")
@Messages({
    "CTL_SupplierDetailedViewAction=Vista detallada de proveedores",
    "CTL_SupplierDetailedViewTopComponent=Vista detallada de proveedores",
    "HINT_SupplierDetailedViewTopComponent=Esta es una ventana de la vista detallada de proveedores"
})
public final class SupplierDetailedViewTopComponent extends TopComponent implements LookupListener {

    private Lookup.Result<Supplier> result = null;
    private Supplier supplier;
    private PhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();

    public SupplierDetailedViewTopComponent() {
        initComponents();
        setName(Bundle.CTL_SupplierDetailedViewTopComponent());
        setToolTipText(Bundle.HINT_SupplierDetailedViewTopComponent());
        this.setFocusable(true);


        setupAddressComboBox();
        setupEmailComboBox();
        setupPhoneComboBox();


        extendedDataTabbedPane.setIconAt(0, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/stock/icons/book.png")));
        extendedDataTabbedPane.setIconAt(1, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/stock/icons/email.png")));
        extendedDataTabbedPane.setIconAt(2, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/stock/icons/phone.png")));
        extendedDataTabbedPane.setIconAt(3, new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/stock/icons/document_notes.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        generalPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        nifLabel = new javax.swing.JLabel();
        nifTextField = new javax.swing.JTextField();
        categoryLabel = new javax.swing.JLabel();
        categoryTextField = new javax.swing.JTextField();
        paymentMethodLabel = new javax.swing.JLabel();
        paymentMethodTextField = new javax.swing.JTextField();
        webLabel = new javax.swing.JLabel();
        webTextField = new javax.swing.JTextField();
        shippingMethodLabel = new javax.swing.JLabel();
        shippingMethodTextField = new javax.swing.JTextField();
        printButton = new javax.swing.JButton();
        generalLabel = new javax.swing.JLabel();
        extendedDataTabbedPane = new javax.swing.JTabbedPane();
        addressViewPanel = new javax.swing.JPanel();
        addressViewLabelLabel = new javax.swing.JLabel();
        addressViewStreetLabel = new javax.swing.JLabel();
        addressViewCityLabel = new javax.swing.JLabel();
        addressViewProvinceLabel = new javax.swing.JLabel();
        addressViewPostalCodeLabel = new javax.swing.JLabel();
        addressViewCountryLabel = new javax.swing.JLabel();
        addressViewLabelTextField = new javax.swing.JTextField();
        addressViewStreetTextField = new javax.swing.JTextField();
        addressViewCityTextField = new javax.swing.JTextField();
        addressViewProvinceTextField = new javax.swing.JTextField();
        addressViewPostalCodeTextField = new javax.swing.JTextField();
        addressViewCountryTextField = new javax.swing.JTextField();
        addressViewNotesLabel = new javax.swing.JLabel();
        addressViewNotesScrollPane = new javax.swing.JScrollPane();
        addressViewNotesTextArea = new javax.swing.JTextArea();
        addressViewActionsPanel = new javax.swing.JPanel();
        addressViewComboBox = new javax.swing.JComboBox();
        phoneViewPanel = new javax.swing.JPanel();
        phoneViewLabelLabel = new javax.swing.JLabel();
        phoneViewNumberLabel = new javax.swing.JLabel();
        phoneViewLabelTextField = new javax.swing.JTextField();
        phoneViewNumberTextField = new javax.swing.JTextField();
        phoneViewNotesLabel = new javax.swing.JLabel();
        phoneViewNotesScrollPane = new javax.swing.JScrollPane();
        phoneViewNotesTextArea = new javax.swing.JTextArea();
        phoneViewActionsPanel = new javax.swing.JPanel();
        phoneViewComboBox = new javax.swing.JComboBox();
        emaiViewlPanel = new javax.swing.JPanel();
        emailViewLabelLabel = new javax.swing.JLabel();
        emailViewAddressLabel = new javax.swing.JLabel();
        emailViewLabelTextField = new javax.swing.JTextField();
        emailViewAddressTextField = new javax.swing.JTextField();
        emailViewNotesLabel = new javax.swing.JLabel();
        emailViewNotesScrollPane = new javax.swing.JScrollPane();
        emailViewNotesTextArea = new javax.swing.JTextArea();
        emailViewActionsPanel = new javax.swing.JPanel();
        emailViewComboBox = new javax.swing.JComboBox();
        notesPanel = new javax.swing.JPanel();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        mainScrollPane.setBorder(null);
        mainScrollPane.setMinimumSize(new java.awt.Dimension(617, 22));

        mainPanel.setLayout(new java.awt.GridBagLayout());

        generalPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(idLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.idLabel.text")); // NOI18N
        idLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(idLabel, gridBagConstraints);

        idTextField.setEditable(false);
        idTextField.setBackground(new java.awt.Color(232, 231, 231));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(idTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.nameLabel.text")); // NOI18N
        nameLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nameLabel, gridBagConstraints);

        nameTextField.setEditable(false);
        nameTextField.setBackground(new java.awt.Color(232, 231, 231));
        nameTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        nameTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nameTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(nifLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.nifLabel.text")); // NOI18N
        nifLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nifLabel, gridBagConstraints);

        nifTextField.setEditable(false);
        nifTextField.setBackground(new java.awt.Color(232, 231, 231));
        nifTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        nifTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(nifTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(categoryLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.categoryLabel.text")); // NOI18N
        categoryLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(categoryLabel, gridBagConstraints);

        categoryTextField.setEditable(false);
        categoryTextField.setBackground(new java.awt.Color(232, 231, 231));
        categoryTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        categoryTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(categoryTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(paymentMethodLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.paymentMethodLabel.text")); // NOI18N
        paymentMethodLabel.setMaximumSize(new java.awt.Dimension(90, 14));
        paymentMethodLabel.setMinimumSize(new java.awt.Dimension(90, 14));
        paymentMethodLabel.setPreferredSize(new java.awt.Dimension(90, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(paymentMethodLabel, gridBagConstraints);

        paymentMethodTextField.setEditable(false);
        paymentMethodTextField.setBackground(new java.awt.Color(232, 231, 231));
        paymentMethodTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        paymentMethodTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(paymentMethodTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(webLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.webLabel.text")); // NOI18N
        webLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(webLabel, gridBagConstraints);

        webTextField.setEditable(false);
        webTextField.setBackground(new java.awt.Color(232, 231, 231));
        webTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        webTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(webTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(shippingMethodLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.shippingMethodLabel.text")); // NOI18N
        shippingMethodLabel.setPreferredSize(new java.awt.Dimension(90, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(shippingMethodLabel, gridBagConstraints);

        shippingMethodTextField.setEditable(false);
        shippingMethodTextField.setBackground(new java.awt.Color(232, 231, 231));
        shippingMethodTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        shippingMethodTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(shippingMethodTextField, gridBagConstraints);

        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/regueiro/easyrepair/ui/stock/icons/printer.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(printButton, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.printButton.text")); // NOI18N
        printButton.setEnabled(false);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        generalPanel.add(printButton, gridBagConstraints);

        generalLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        generalLabel.setForeground(new java.awt.Color(82, 107, 134));
        org.openide.awt.Mnemonics.setLocalizedText(generalLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.generalLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 10);
        generalPanel.add(generalLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        mainPanel.add(generalPanel, gridBagConstraints);

        extendedDataTabbedPane.setMinimumSize(new java.awt.Dimension(100, 100));

        addressViewPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(addressViewLabelLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewLabelLabel.text")); // NOI18N
        addressViewLabelLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewLabelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressViewStreetLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewStreetLabel.text")); // NOI18N
        addressViewStreetLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewStreetLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressViewCityLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewCityLabel.text")); // NOI18N
        addressViewCityLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewCityLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressViewProvinceLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewProvinceLabel.text")); // NOI18N
        addressViewProvinceLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewProvinceLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressViewPostalCodeLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewPostalCodeLabel.text")); // NOI18N
        addressViewPostalCodeLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewPostalCodeLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressViewCountryLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewCountryLabel.text")); // NOI18N
        addressViewCountryLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewCountryLabel, gridBagConstraints);

        addressViewLabelTextField.setEditable(false);
        addressViewLabelTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressViewLabelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressViewLabelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewLabelTextField, gridBagConstraints);

        addressViewStreetTextField.setEditable(false);
        addressViewStreetTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressViewStreetTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressViewStreetTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewStreetTextField, gridBagConstraints);

        addressViewCityTextField.setEditable(false);
        addressViewCityTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressViewCityTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressViewCityTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewCityTextField, gridBagConstraints);

        addressViewProvinceTextField.setEditable(false);
        addressViewProvinceTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressViewProvinceTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressViewProvinceTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewProvinceTextField, gridBagConstraints);

        addressViewPostalCodeTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressViewPostalCodeTextField.setEditable(false);
        addressViewPostalCodeTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressViewPostalCodeTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewPostalCodeTextField, gridBagConstraints);

        addressViewCountryTextField.setBackground(new java.awt.Color(232, 231, 231));
        addressViewCountryTextField.setEditable(false);
        addressViewCountryTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        addressViewCountryTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewCountryTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(addressViewNotesLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewNotesLabel.text")); // NOI18N
        addressViewNotesLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewNotesLabel, gridBagConstraints);

        addressViewNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        addressViewNotesTextArea.setColumns(20);
        addressViewNotesTextArea.setEditable(false);
        addressViewNotesTextArea.setRows(5);
        addressViewNotesScrollPane.setViewportView(addressViewNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewPanel.add(addressViewNotesScrollPane, gridBagConstraints);

        addressViewActionsPanel.setLayout(new java.awt.GridBagLayout());

        addressViewComboBox.setEnabled(false);
        addressViewComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        addressViewComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addressViewActionsPanel.add(addressViewComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        addressViewPanel.add(addressViewActionsPanel, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.addressViewPanel.TabConstraints.tabTitle"), addressViewPanel); // NOI18N

        phoneViewPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(phoneViewLabelLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.phoneViewLabelLabel.text")); // NOI18N
        phoneViewLabelLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewPanel.add(phoneViewLabelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(phoneViewNumberLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.phoneViewNumberLabel.text")); // NOI18N
        phoneViewNumberLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewPanel.add(phoneViewNumberLabel, gridBagConstraints);

        phoneViewLabelTextField.setBackground(new java.awt.Color(232, 231, 231));
        phoneViewLabelTextField.setEditable(false);
        phoneViewLabelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        phoneViewLabelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewPanel.add(phoneViewLabelTextField, gridBagConstraints);

        phoneViewNumberTextField.setBackground(new java.awt.Color(232, 231, 231));
        phoneViewNumberTextField.setEditable(false);
        phoneViewNumberTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        phoneViewNumberTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewPanel.add(phoneViewNumberTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(phoneViewNotesLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.phoneViewNotesLabel.text")); // NOI18N
        phoneViewNotesLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewPanel.add(phoneViewNotesLabel, gridBagConstraints);

        phoneViewNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        phoneViewNotesTextArea.setColumns(20);
        phoneViewNotesTextArea.setEditable(false);
        phoneViewNotesTextArea.setRows(5);
        phoneViewNotesScrollPane.setViewportView(phoneViewNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewPanel.add(phoneViewNotesScrollPane, gridBagConstraints);

        phoneViewActionsPanel.setLayout(new java.awt.GridBagLayout());

        phoneViewComboBox.setEnabled(false);
        phoneViewComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        phoneViewComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        phoneViewActionsPanel.add(phoneViewComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        phoneViewPanel.add(phoneViewActionsPanel, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.phoneViewPanel.TabConstraints.tabTitle"), phoneViewPanel); // NOI18N

        emaiViewlPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(emailViewLabelLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.emailViewLabelLabel.text")); // NOI18N
        emailViewLabelLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emaiViewlPanel.add(emailViewLabelLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(emailViewAddressLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.emailViewAddressLabel.text")); // NOI18N
        emailViewAddressLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emaiViewlPanel.add(emailViewAddressLabel, gridBagConstraints);

        emailViewLabelTextField.setBackground(new java.awt.Color(232, 231, 231));
        emailViewLabelTextField.setEditable(false);
        emailViewLabelTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        emailViewLabelTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emaiViewlPanel.add(emailViewLabelTextField, gridBagConstraints);

        emailViewAddressTextField.setBackground(new java.awt.Color(232, 231, 231));
        emailViewAddressTextField.setEditable(false);
        emailViewAddressTextField.setMinimumSize(new java.awt.Dimension(180, 20));
        emailViewAddressTextField.setPreferredSize(new java.awt.Dimension(180, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emaiViewlPanel.add(emailViewAddressTextField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(emailViewNotesLabel, org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.emailViewNotesLabel.text")); // NOI18N
        emailViewNotesLabel.setPreferredSize(new java.awt.Dimension(78, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emaiViewlPanel.add(emailViewNotesLabel, gridBagConstraints);

        emailViewNotesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        emailViewNotesTextArea.setColumns(20);
        emailViewNotesTextArea.setEditable(false);
        emailViewNotesTextArea.setRows(5);
        emailViewNotesScrollPane.setViewportView(emailViewNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emaiViewlPanel.add(emailViewNotesScrollPane, gridBagConstraints);

        emailViewActionsPanel.setLayout(new java.awt.GridBagLayout());

        emailViewComboBox.setEnabled(false);
        emailViewComboBox.setMinimumSize(new java.awt.Dimension(100, 24));
        emailViewComboBox.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        emailViewActionsPanel.add(emailViewComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        emaiViewlPanel.add(emailViewActionsPanel, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.emaiViewlPanel.TabConstraints.tabTitle"), emaiViewlPanel); // NOI18N

        notesPanel.setLayout(new java.awt.GridBagLayout());

        notesTextArea.setBackground(new java.awt.Color(232, 231, 231));
        notesTextArea.setColumns(20);
        notesTextArea.setEditable(false);
        notesTextArea.setRows(5);
        notesScrollPane.setViewportView(notesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        notesPanel.add(notesScrollPane, gridBagConstraints);

        extendedDataTabbedPane.addTab(org.openide.util.NbBundle.getMessage(SupplierDetailedViewTopComponent.class, "SupplierDetailedViewTopComponent.notesPanel.TabConstraints.tabTitle"), notesPanel); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        mainPanel.add(extendedDataTabbedPane, gridBagConstraints);

        mainScrollPane.setViewportView(mainPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(mainScrollPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        final SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected void done() {
            }

            @Override
            protected Void doInBackground() {
                ReportPrinter printer = new ReportPrinter();
                printer.printSupplier(supplier);
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_printButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addressViewActionsPanel;
    private javax.swing.JLabel addressViewCityLabel;
    private javax.swing.JTextField addressViewCityTextField;
    private javax.swing.JComboBox addressViewComboBox;
    private javax.swing.JLabel addressViewCountryLabel;
    private javax.swing.JTextField addressViewCountryTextField;
    private javax.swing.JLabel addressViewLabelLabel;
    private javax.swing.JTextField addressViewLabelTextField;
    private javax.swing.JLabel addressViewNotesLabel;
    private javax.swing.JScrollPane addressViewNotesScrollPane;
    private javax.swing.JTextArea addressViewNotesTextArea;
    private javax.swing.JPanel addressViewPanel;
    private javax.swing.JLabel addressViewPostalCodeLabel;
    private javax.swing.JTextField addressViewPostalCodeTextField;
    private javax.swing.JLabel addressViewProvinceLabel;
    private javax.swing.JTextField addressViewProvinceTextField;
    private javax.swing.JLabel addressViewStreetLabel;
    private javax.swing.JTextField addressViewStreetTextField;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JTextField categoryTextField;
    private javax.swing.JPanel emaiViewlPanel;
    private javax.swing.JPanel emailViewActionsPanel;
    private javax.swing.JLabel emailViewAddressLabel;
    private javax.swing.JTextField emailViewAddressTextField;
    private javax.swing.JComboBox emailViewComboBox;
    private javax.swing.JLabel emailViewLabelLabel;
    private javax.swing.JTextField emailViewLabelTextField;
    private javax.swing.JLabel emailViewNotesLabel;
    private javax.swing.JScrollPane emailViewNotesScrollPane;
    private javax.swing.JTextArea emailViewNotesTextArea;
    private javax.swing.JTabbedPane extendedDataTabbedPane;
    private javax.swing.JLabel generalLabel;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel nifLabel;
    private javax.swing.JTextField nifTextField;
    private javax.swing.JPanel notesPanel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTextArea;
    private javax.swing.JLabel paymentMethodLabel;
    private javax.swing.JTextField paymentMethodTextField;
    private javax.swing.JPanel phoneViewActionsPanel;
    private javax.swing.JComboBox phoneViewComboBox;
    private javax.swing.JLabel phoneViewLabelLabel;
    private javax.swing.JTextField phoneViewLabelTextField;
    private javax.swing.JLabel phoneViewNotesLabel;
    private javax.swing.JScrollPane phoneViewNotesScrollPane;
    private javax.swing.JTextArea phoneViewNotesTextArea;
    private javax.swing.JLabel phoneViewNumberLabel;
    private javax.swing.JTextField phoneViewNumberTextField;
    private javax.swing.JPanel phoneViewPanel;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel shippingMethodLabel;
    private javax.swing.JTextField shippingMethodTextField;
    private javax.swing.JLabel webLabel;
    private javax.swing.JTextField webTextField;
    // End of variables declaration//GEN-END:variables

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public HelpCtx getHelpCtx() {
        //HelpCtx ctx = new HelpCtx("sdk.scene_explorer");
        //this call is for single components:
        return new HelpCtx("es.regueiro.easyrepair.ui.stock.detailed");
    }

    @Override
    public void componentOpened() {
        result = SupplierLookup.getDefault().lookupResult(Supplier.class);
        result.addLookupListener(this);

        fillData();

    }

    @Override
    public void componentClosed() {
        result.removeLookupListener(this);
        result = null;
    }

    @Override
    public void resultChanged(LookupEvent event) {
        fillData();
    }

    private void fillData() {
        Collection<? extends Supplier> supplierCol = result.allInstances();
        if (!supplierCol.isEmpty()) {
            Supplier tempSupplier = supplierCol.iterator().next();
            if (supplier != tempSupplier) {
                supplier = tempSupplier;
                clearGeneral();
                clearNotes();

                idTextField.setText(supplier.getId().toString());
                nameTextField.setText(supplier.getName());
                if (supplier.getNif() != null) {
                    nifTextField.setText(supplier.getNif().getNumber());
                }
                categoryTextField.setText(supplier.getCategory());
                webTextField.setText(supplier.getWeb());
                shippingMethodTextField.setText(supplier.getShippingMethod());
                paymentMethodTextField.setText(supplier.getPaymentMethod());
                fillAddresses();
                fillEmails();
                fillPhones();
                if (supplier.getNotes() != null) {
                    notesTextArea.setText(supplier.getNotes());
                    extendedDataTabbedPane.setEnabledAt(3, true);
                    if (!extendedDataTabbedPane.isEnabledAt(0)
                            && !extendedDataTabbedPane.isEnabledAt(1)
                            && !extendedDataTabbedPane.isEnabledAt(2)) {
                        extendedDataTabbedPane.setSelectedIndex(3);
                    }
                }
                printButton.setEnabled(true);
            }
        } else {
//            clear();
        }
    }

    private void fillAddresses() {
        clearAddresses();
        if (supplier.getAddress() != null && !supplier.getAddress().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(0, true);
            for (Address a : supplier.getAddress()) {
                AddressBox adddress = new AddressBox(a.getLabel(), a);
                addressViewComboBox.addItem(adddress);
            }
            addressViewComboBox.setEnabled(true);
            extendedDataTabbedPane.setSelectedIndex(0);
        }
    }

    private void fillPhones() {
        clearPhones();
        if (supplier.getPhone() != null && !supplier.getPhone().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(2, true);
            for (Phone p : supplier.getPhone()) {
                PhoneBox phone = new PhoneBox(p.getLabel(), p);
                phoneViewComboBox.addItem(phone);
            }
            phoneViewComboBox.setEnabled(true);
            if (!extendedDataTabbedPane.isEnabledAt(0)
                    && !extendedDataTabbedPane.isEnabledAt(1)) {
                extendedDataTabbedPane.setSelectedIndex(2);
            }
        }
    }

    private void fillEmails() {
        clearEmails();
        if (supplier.getEmail() != null && !supplier.getEmail().isEmpty()) {
            extendedDataTabbedPane.setEnabledAt(1, true);
            for (Email e : supplier.getEmail()) {
                EmailBox email = new EmailBox(e.getLabel(), e);
                emailViewComboBox.addItem(email);
            }
            emailViewComboBox.setEnabled(true);
            if (!extendedDataTabbedPane.isEnabledAt(0)) {
                extendedDataTabbedPane.setSelectedIndex(1);
            }
        }
    }

    private void clear() {
        supplier = null;
        clearGeneral();
        clearAddresses();
        clearEmails();
        clearPhones();
        clearNotes();
    }

    private void clearGeneral() {
        idTextField.setText("");
        nameTextField.setText("");
        nifTextField.setText("");
        categoryTextField.setText("");
        webTextField.setText("");
        shippingMethodTextField.setText("");
        paymentMethodTextField.setText("");

        extendedDataTabbedPane.setEnabledAt(0, false);
        extendedDataTabbedPane.setEnabledAt(1, false);
        extendedDataTabbedPane.setEnabledAt(2, false);
        extendedDataTabbedPane.setEnabledAt(3, false);
        
        printButton.setEnabled(false);
    }

    private void clearEmails() {
        extendedDataTabbedPane.setEnabledAt(1, false);
        emailViewComboBox.setEnabled(false);
        emailViewComboBox.removeAllItems();
        emailViewAddressTextField.setText("");
        emailViewLabelTextField.setText("");
        emailViewNotesTextArea.setText("");
    }

    private void clearPhones() {
        extendedDataTabbedPane.setEnabledAt(2, false);
        phoneViewComboBox.setEnabled(false);
        phoneViewComboBox.removeAllItems();
        phoneViewNumberTextField.setText("");
        phoneViewLabelTextField.setText("");
        phoneViewNotesTextArea.setText("");
    }

    private void clearNotes() {
        extendedDataTabbedPane.setEnabledAt(3, false);
        notesTextArea.setText("");
    }

    private void clearAddresses() {
        extendedDataTabbedPane.setEnabledAt(0, false);
        addressViewComboBox.setEnabled(false);
        addressViewComboBox.removeAllItems();
        addressViewCityTextField.setText("");
        addressViewCountryTextField.setText("");
        addressViewLabelTextField.setText("");
        addressViewPostalCodeTextField.setText("");
        addressViewProvinceTextField.setText("");
        addressViewStreetTextField.setText("");
        addressViewNotesTextArea.setText("");
    }

    private void setupEmailComboBox() {
        emailViewComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    EmailBox email = (EmailBox) e.getItem();

                    if (email != null && email.email != null) {
                        emailViewLabelTextField.setText(email.email.getLabel());
                        emailViewAddressTextField.setText(email.email.getAddress());
                        emailViewNotesTextArea.setText(email.email.getNotes());
                    }
                }
            }
        });
    }

    private void setupAddressComboBox() {
        addressViewComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    AddressBox address = (AddressBox) e.getItem();

                    if (address != null && address.address != null) {
                        addressViewStreetTextField.setText(address.address.getStreet());
                        addressViewProvinceTextField.setText(address.address.getProvince());
                        addressViewPostalCodeTextField.setText(address.address.getPostalCode());
                        addressViewCityTextField.setText(address.address.getCity());
                        addressViewCountryTextField.setText(address.address.getCountry());
                        addressViewLabelTextField.setText(address.address.getLabel());
                        addressViewNotesTextArea.setText(address.address.getNotes());
                    }
                }
            }
        });
    }

    private void setupPhoneComboBox() {
        phoneViewComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    PhoneBox phone = (PhoneBox) e.getItem();

                    if (phone != null && phone.phone != null) {
                        phoneViewLabelTextField.setText(phone.phone.getLabel());
                        String formattedPhone;
                        Phonenumber.PhoneNumber numberProto;
                        try {
                            numberProto = phoneUtil.parse(phone.phone.getNumber(), "ES");
                        } catch (NumberParseException ex) {
                            throw new IllegalArgumentException("This shouldn't happen " + ex.getMessage());
                        }
                        if (numberProto.getCountryCode() == 34) {
                            phoneViewNumberTextField.setText(phoneUtil.format(numberProto, PhoneNumberUtil.PhoneNumberFormat.NATIONAL));
                        } else {
                            phoneViewNumberTextField.setText(phoneUtil.format(numberProto, PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL));
                        }
                        phoneViewNotesTextArea.setText(phone.phone.getNotes());
                    }
                }
            }
        });
    }

    private class AddressBox {

        public Address address;
        public String label;

        public AddressBox(String label, Address address) {
            this.label = label;
            this.address = address;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }

    private class PhoneBox {

        public Phone phone;
        public String label;

        public PhoneBox(String label, Phone phone) {
            this.label = label;
            this.phone = phone;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }

    private class EmailBox {

        public Email email;
        public String label;

        public EmailBox(String label, Email email) {
            this.label = label;
            this.email = email;
        }

        @Override
        public String toString() {
            return this.label;
        }
    }
}
